
{
  "entities": {
    "Product": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Product",
      "type": "object",
      "description": "Represents a grocery product available for purchase.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the product."
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the product."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the product image.",
          "format": "uri"
        },
        "price": {
          "type": "number",
          "description": "Price of the product."
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N Product)"
        },
        "inventory": {
          "type": "number",
          "description": "Current inventory level of the product."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "imageUrl",
        "price",
        "categoryId",
        "inventory"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category of grocery products.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the category image.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the SwiftShop application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName"
      ]
    },
    "Address": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Address",
      "type": "object",
      "description": "Represents a delivery address for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the address."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Address)"
        },
        "street": {
          "type": "string",
          "description": "Street address."
        },
        "city": {
          "type": "string",
          "description": "City."
        },
        "state": {
          "type": "string",
          "description": "State."
        },
        "zipCode": {
          "type": "string",
          "description": "Zip code."
        }
      },
      "required": [
        "id",
        "userId",
        "street",
        "city",
        "state",
        "zipCode"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents an order placed by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Order)"
        },
        "addressId": {
          "type": "string",
          "description": "Reference to Address. (Relationship: Address 1:N Order)"
        },
        "orderDate": {
          "type": "string",
          "description": "Date and time the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "status": {
          "type": "string",
          "description": "Current status of the order (e.g., placed, processing, shipped, delivered)."
        }
      },
      "required": [
        "id",
        "userId",
        "addressId",
        "orderDate",
        "totalAmount",
        "status"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents an item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order item."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:N OrderItem)"
        },
        "productId": {
          "type": "string",
          "description": "Reference to Product. (Relationship: Product 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the product in the order item."
        },
        "itemPrice": {
          "type": "number",
          "description": "Price of the item at the time of order."
        }
      },
      "required": [
        "id",
        "orderId",
        "productId",
        "quantity",
        "itemPrice"
      ]
    },
    "SupportTicket": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SupportTicket",
      "type": "object",
      "description": "Represents a customer support ticket.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the support ticket."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N SupportTicket)"
        },
        "subject": {
          "type": "string",
          "description": "Subject of the support ticket."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the issue."
        },
        "status": {
          "type": "string",
          "description": "Current status of the support ticket (e.g., open, pending, closed)."
        },
        "createdAt": {
          "type": "string",
          "description": "Date and time the ticket was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "subject",
        "description",
        "status",
        "createdAt"
      ]
    },
    "ChatMessage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ChatMessage",
      "type": "object",
      "description": "Represents a message within a customer support chat.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the chat message."
        },
        "supportTicketId": {
          "type": "string",
          "description": "Reference to SupportTicket. (Relationship: SupportTicket 1:N ChatMessage)"
        },
        "senderId": {
          "type": "string",
          "description": "Reference to User who sent the message."
        },
        "message": {
          "type": "string",
          "description": "Content of the chat message."
        },
        "timestamp": {
          "type": "string",
          "description": "Date and time the message was sent.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "supportTicketId",
        "senderId",
        "message",
        "timestamp"
      ]
    },
    "BrandingSettings": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BrandingSettings",
      "type": "object",
      "description": "Stores branding settings for the application.",
      "properties": {
        "logoUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL of the store logo."
        },
        "heroImageUrls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "An array of URLs for hero section banners."
        }
      }
    },
    "ApiKeys": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ApiKeys",
      "type": "object",
      "description": "Stores API keys for third-party services.",
      "properties": {
        "googleMapsApiKey": { "type": "string" },
        "phonePeApiKey": { "type": "string" },
        "phonePeApiSecret": { "type": "string" }
      }
    },
    "StoreSettings": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "StoreSettings",
      "type": "object",
      "description": "Stores general store settings.",
      "properties": {
        "storeName": { "type": "string" },
        "deliveryFee": { "type": "number" }
      }
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/categories/{categoryId}": {
      "schema": { "$ref": "#/entities/Category"},
      "description": "Stores grocery categories. Publicly readable to allow browsing."
    },
    "/products/{productId}": {
      "schema": { "$ref": "#/entities/Product"},
      "description": "Stores product details."
    },
    "/settings/branding": {
      "schema": { "$ref": "#/entities/BrandingSettings"},
      "description": "Stores branding settings. Publicly readable, admin writable."
    },
    "/settings/apiKeys": {
        "schema": { "$ref": "#/entities/ApiKeys" },
        "description": "Stores API keys. Admin writable."
    },
    "/settings/store": {
        "schema": { "$ref": "#/entities/StoreSettings" },
        "description": "Stores store settings. Admin writable."
    },
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/User"},
      "description": "Stores user profiles. Only the user can access their own profile."
    },
    "/users/{userId}/addresses/{addressId}": {
      "schema": { "$ref": "#/entities/Address"},
      "description": "Stores user's addresses. Only the user can access their addresses."
    },
    "/users/{userId}/orders/{orderId}": {
      "schema": { "$ref": "#/entities/Order"},
      "description": "Stores user's orders. Only the user can access their orders."
    },
    "/users/{userId}/orders/{orderId}/orderItems/{orderItemId}": {
      "schema": { "$ref": "#/entities/OrderItem"},
      "description": "Stores order items within an order. Only the user can access their order items."
    },
    "/users/{userId}/supportTickets/{supportTicketId}": {
      "schema": { "$ref": "#/entities/SupportTicket"},
      "description": "Stores user's support tickets. Only the user can access their support tickets."
    },
    "/users/{userId}/supportTickets/{supportTicketId}/chatMessages/{chatMessageId}": {
      "schema": { "$ref": "#/entities/ChatMessage"},
      "description": "Stores chat messages within a support ticket. Only the user can access their chat messages."
    },
    "/orders/{orderId}": {
      "schema": { "$ref": "#/entities/Order"},
      "description": "Stores all orders. Writable by admins, readable by specific users."
    }
  }
}
